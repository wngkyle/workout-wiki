type Query {
    browseMovement: [Movement!]!
    browseUser: [User!]!
}

type Mutation {
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload 
}

type User {
    id: ID!
    name: String!
    email: String!
    bookmark: Bookmark!
    RequestedMovement: [RequestedMovement!]!
}

type Bookmark {
    id: ID!
    movement: [Movement!]!
    user: User
}

type RequestedMovement {
    id: ID!
    name: String!
    exercise: String!
    targetMuscle: String!
    movementPattern: String!
    equipment: String!
    skillLevel: String!
    description: String!
    user: User
}

type Movement {
    id: ID!
    name: String!
    exercise: String!
    targetMuscle: String!
    movementPattern: String!
    equipment: String!
    skillLevel: String!
    description: String!
    user: User
}

type Exercise {
    id: ID!
    type: String!
    movement: [Movement!]!
    requestedMovement: [RequestedMovement!]!
}

type Equipment {
    id: ID!
    type: String!
    movement: [Movement!]!
    requestedMovement: [RequestedMovement!]!
}

type TargetMuscle {
    id: ID!
    part: String!
    movement: [Movement!]!
    requestedMovement: [RequestedMovement!]!
}

type MovementPattern {
    id: ID!
    pattern: String!
    movement: [Movement!]!
    requestedMovement: [RequestedMovement!]!
}

type AuthPayload {
    token: String
    user: User
}